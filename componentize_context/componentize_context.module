<?php
/**
 * @file Alter components based on context.
 */


/**
 * Implements hook_context_registry().
 *
 * Tried to keep naming insanity to a minimum.
 */
function componentize_context_context_registry() {
  $registry['reactions'] = array(
    'component_alter' => array(
      'title' => t('Component Alter'),
      'description' => t('Alter component properties (like modifier) when being rendered.'),
      'plugin' => 'context_reaction_component_alter',
    ),
  );

  return $registry;
}


/**
 * Implements hook_context_plugins().
 */
function componentize_context_context_plugins() {
  $plugins['context_reaction_component_alter'] = array(
    'handler' => array(
      'path' => drupal_get_path('module', 'componentize_context'),
      'file' => 'context_reaction_component_alter.context.inc',
      'class' => 'context_reaction_component_alter',
      'parent' => 'context_reaction',
    ),
  );

  return $plugins;
}

/**
 * Implements hook_componentize_render_alter().
 *
 * Allow altering component modifiers by active contexts' options.
 */
function componentize_context_componentize_render_alter(&$component, &$data) {
  if ($plugin = context_get_plugin('reaction', 'componentize_alter')) {
    $plugin->execute($component, $data);
  }
}
